plugins {
    id 'base'
    id 'maven-publish'
    id 'de.undercouch.download' version '4.0.4'
    id 'com.palantir.git-version' version '0.12.3'
}

ext.versionDetails = versionDetails()
version versionDetails.lastTag

def downloadGameControllerTask = tasks.register("downloadGameController")
tasks["build"].configure {
    dependsOn(downloadGameControllerTask)
}

String gameControllerBinaryLocation = "$buildDir/binaries"

def binaries = [
        ["classifier": "windows_amd64", ext: ".exe"],
        ["classifier": "linux_amd64", ext: ""],
        ["classifier": "darwin_amd64", ext: ""]
]

binaries.each { binary ->

    def gameControllerVersion = "v2.15.6"
    def gameControllerBinary = "ssl-game-controller_${gameControllerVersion}_${binary.classifier}${binary.ext}".toString()

    def task = tasks.register("downloadGameController_${binary.classifier}", Download) {
        src "https://github.com/RoboCup-SSL/ssl-game-controller/releases/download/${gameControllerVersion}/${gameControllerBinary}"
        dest file("${gameControllerBinaryLocation}/ssl-game-controller_${binary.classifier}${binary.ext}")
        overwrite true
    }

    tasks.register("gameController_${binary.classifier}", Jar) {
        archiveClassifier.set(binary.classifier)
        from(file("${gameControllerBinaryLocation}/ssl-game-controller_${binary.classifier}${binary.ext}")) {
            rename { "ssl-game-controller" }
        }
        dependsOn tasks["downloadGameController_${binary.classifier}"]
    }
    tasks["downloadGameController"].dependsOn(task)
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.github.TIGERs-Mannheim'
            artifactId = 'ssl-game-controller-maven'

            binaries.each { binary ->
                artifact(tasks["gameController_${binary.classifier}"]) {
                    classifier binary.classifier
                }
            }
        }
    }
    repositories {
        maven {
            url = "https://nexus.tigers-mannheim.de/repository/hosted/"
            credentials {
                username = System.getenv("MAVEN_REPO_USERNAME")
                password = System.getenv("MAVEN_REPO_PASSWORD")
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}
